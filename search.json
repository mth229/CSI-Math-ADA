[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ADA compliance notes",
    "section": "",
    "text": "1 ADA and the Math Department\nThe Department of Mathematics takes seriously compliance with the requirements of the ADA.\nIn spring of 2023, CUNY entered into an voluntary agreement with the Southern District of New York. This was in response to a student complaint in 2011 that WebAssign was not accessible given their needs. (“That digital platform was not fully capable of reading out mathematical and scientific symbols and equations.”)\nPart of the settlement included:\nThese pages attempt to make aware the accessibility requirements for instructor-created content, as commonly done in a mathematics class."
  },
  {
    "objectID": "index.html#the-technology-stack",
    "href": "index.html#the-technology-stack",
    "title": "ADA compliance notes",
    "section": "1.1 The technology stack",
    "text": "1.1 The technology stack\nMath classes at CSI use several different technology stacks. For online homework we use all of WebAssign, Achieve, and WeBWorK.\nTo generate course materials, many instructors use LaTeX to create pdf, many use a markdown variant and Quarto to generate pdf and HTML pages, others use Microsoft Word, and still others have their own solutions.\nThese pages contain working notes on each of these."
  },
  {
    "objectID": "index.html#the-main-issues-with-publishing-accessible-mathematics",
    "href": "index.html#the-main-issues-with-publishing-accessible-mathematics",
    "title": "ADA compliance notes",
    "section": "1.2 The main issues with publishing accessible mathematics",
    "text": "1.2 The main issues with publishing accessible mathematics\n\n1.2.1 Accessible PDF\n\nBecause LaTeX was designed as a typesetting program, PDF documents created using LaTeX do not include the document structure and tagging required for accessibility by default. It is possible to create accessible PDF documents using LaTeX but users will need to use additional LaTeX packages and should be aware of accessibility standards. The Accessibilty package in LaTeX can be used to add the structure, tagging, and alt text that PDF’s created with LaTeX lack.\nFrom LaTeX Guides\n\n\n\n1.2.2 Equations\n\nTo make mathematical formulae accessible in you LaTeX document, you will need to load in the axessibility package into the preamble.\n\n\n\n1.2.3 Tables\nData tables are used to organize data with a logical relationship in grids. Accessible tables need HTML markup that indicates header cells and data cells and defines their relationship. Assistive technologies use this information to provide context to users. https://www.w3.org/WAI/tutorials/tables/\n\n\n1.2.4 Figures\nImages must have text alternatives that describe the information or function represented by them. This ensures that images can be used by people with various disabilities. This tutorial demonstrates how to provide appropriate text alternatives based on the purpose of the image. https://www.w3.org/WAI/tutorials/images/"
  },
  {
    "objectID": "ada-tools.html",
    "href": "ada-tools.html",
    "title": "2  Tools to check for ADA compliance",
    "section": "",
    "text": "https://www.w3.org/WAI/standards-guidelines/wcag/\n\nWCAG are guidelines, internationally accepted, describing how to make web content more accessible to people with disabilities.\n\nhttps://wave.webaim.org/ WAVE provides a plugin for a browser making it easy and informative to check for Web Content Accessibility Guideline (WCAG) errors."
  },
  {
    "objectID": "webwork.html",
    "href": "webwork.html",
    "title": "3  Notes on WeBWork",
    "section": "",
    "text": "WeBWorK is a system, sponsored by the Mathematical Association of America, using in the department of mathematics for online homework and quizzes.\n\n\nthere is a webwork frontend called “edfinity” that touts their ADA compliance: https://edfinity.com/vpat"
  },
  {
    "objectID": "achieve.html",
    "href": "achieve.html",
    "title": "5  Notes on Achieve",
    "section": "",
    "text": "Achieve is a course supplement available with MacMillan adoptions.\nhttps://www.macmillanlearning.com/college/us/our-story/accessibility"
  },
  {
    "objectID": "latex.html",
    "href": "latex.html",
    "title": "6  Notes on LaTeX",
    "section": "",
    "text": "Three links of interest (re: accessible LaTeX):\nhttps://libguides.lib.msu.edu/c.php?g=995742&p=8207771\nhttps://www.ams.org/journals/notices/202301/rnoti-p68.pdf\nhttps://tex.stackexchange.com/questions/261537/a-guide-on-how-to-produce-accessible-pdf-files"
  },
  {
    "objectID": "quarto.html",
    "href": "quarto.html",
    "title": "8  Notes on Quarto",
    "section": "",
    "text": "Quarto is an open-source scientific and technical publishing system which can be used to publish in HTML, PDF, and other formats. A key feature is easy integration with programming languages like Julia, R, and Python.\n\nOne issue I’m running into now is Quarto isn’t able to produce tagged PDF/A documents. At least not with what I tried which is just\n(it doesn’t understand how Quarto’s tables are produced and isn’t able to compile).\nQuarto is built on Pandoc which then uses pdflatex so the accessibility information needs to be passed through multiple levels. Pandoc has more info at 1 and 2. The suggestion with Pandoc is to use ConTeXt instead of LaTeX since ConTeXt always produces tagged documents, although Pandoc requires an extension in order to optimize for tagging.\nSummary: Quarto is not suitable for producing tagged PDFs at this time; the best workaround I can find is to use html output. The main drawback is figures in tikz need to be compiled separately."
  },
  {
    "objectID": "ms-word.html",
    "href": "ms-word.html",
    "title": "9  Notes on Microsoft Word",
    "section": "",
    "text": "Here’s a government website for Word Documents: https://www.section508.gov/create/documents/"
  },
  {
    "objectID": "html.html#guidance",
    "href": "html.html#guidance",
    "title": "10  Notes on HTML/CSS",
    "section": "10.1 Guidance:",
    "text": "10.1 Guidance:\n\nPage title (&lt;title&gt;&lt;/title&gt;)\n\nshould adequately and briefly describe the content of the page\nshould be different from other pages on the same website\n\nImage alternative text (alt-text) (&lt;img alt=\"...\")\n\nEvery functional image (e.g. figures) should have a descriptive alt-text\nDecorative image which do not need description, should have a null alt-text (alt=\"\")\n\nText\n\nUse semantic headings (&lt;h1&gt;, &lt;h2&gt;,…) rather than &lt;div&gt; or &lt;span&gt;\nAim for good contrast between different colors (7:1). Larger text is allowed to have a slightly lower contrast ratio (4.5:1). Test this with tools such as from WebAIM or Mozilla Firefox’s accessibility dev tools (F12).\nText should resize well. Test zooming in to 200%.\n\nStructure\n\nUse semantic tags (e.g. &lt;header&gt;, &lt;main&gt;, &lt;section&gt;) where possible, rather than &lt;div&gt;. Likewise, prefer &lt;em&gt; and &lt;strong&gt; rather than &lt;i&gt;, &lt;b&gt; or &lt;span&gt;.\n\nInteractivity\n\nTabbing order (tab) for links should be visible and follow a logical order through the page"
  },
  {
    "objectID": "html.html#links",
    "href": "html.html#links",
    "title": "10  Notes on HTML/CSS",
    "section": "10.2 Links",
    "text": "10.2 Links\n\nCUNY guidance on web accessibility\nW3C Web Accessibility Initiative"
  }
]