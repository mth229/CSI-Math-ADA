# Notes on Quarto

[Quarto](https://quarto.org/) is an open-source scientific and technical publishing system which can be used to publish in HTML, PDF, and other formats. A key feature is easy integration with programming languages like Julia, R, and Python.


## Quarto can use different tools,

It appears that $\LaTeX$ will evolve to have more support for tagging of PDF documents. See [tagpdf](https://ctan.org/pkg/tagpdf?lang=en) for some details.

The `tinytex` installation is very current. The name implies it is small, but how? It downloads packages on demand, so unlike other TeX installations, you need not have everything on your hard drive.

To install `tinytex` is [easy](https://quarto.org/docs/output-formats/pdf-engine.html)

> `quarto install tinytex`

As an aside, there are `quarto update tinytex` and `quarto uninstall tinytex` commands.




----

::: {.callout-note}
## Quarto head's up

TG: One issue I'm running into now is Quarto isn't able to produce tagged PDF/A documents. At least not with what I tried which is just \usepackage[tagged]{accessibility} (it doesn't understand how Quarto's tables are produced and isn't able to compile).

Quarto is built on Pandoc which then uses pdflatex so the accessibility information needs to be passed through multiple levels. Pandoc has more info at [1] and [2]. The suggestion with Pandoc is to use ConTeXt instead of LaTeX since ConTeXt always produces tagged documents, although Pandoc requires an extension in order to optimize for tagging.

Summary: Quarto is not suitable for producing tagged PDFs at this time; the best workaround I can find is to use html output. The main drawback is figures in tikz need to be compiled separately.

[1]: https://github.com/jgm/pandoc/issues/5409
[2]: https://pandoc.org/MANUAL#accessible-pdfs-and-pdf-archiving-standards

:::
